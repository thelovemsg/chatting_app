server:
  port: 9090
spring:
  h2:
    console:
      enabled: true
  datasource:
    url: jdbc:h2:tcp://localhost/~/websocket_jpa_test
    driver-class-name: org.h2.Driver
    username: sa
    password:
    # 설정들은 spring.io에서 doc에서 찾아서 공부해야한다.
    # jpa설정
  jpa:
    hibernate: # hibernate 사용 설정
      # 애플리케이션 실행 시점에 테이블을 다 지우고, 내가 가진 entity 정보를 보고 다시 테이블 자동 생성
      # if exists drop table 해주고 다시 만들어준다고 보면 된다.
      ddl-auto: create
    properties: # property 사용 설정
      hibernate: # hibernate property 설정
        format_sql: true
        default_batch_fetch_size: 100
      # 정적 리소스에 변화가 있을 때 바로 반영한다.
    defer-datasource-initialization: true
  devtools:
    livereload:
      enabled: true
  # thymeleaf 참조 경로
  thymeleaf:
    prefix: classpath:/templates/
    suffix: html
    cache: false
      # thymeleaf에 대한 캐시를 남기지 않는다. cache=false 설정(운영시는 true)
      # templates 디렉토리에 파일이 있는지 없는지 체크, 없으면 에러를 발생시킨다.
    check-template-location: true
  # 로그 레벨 설정
logging:
  level:
      # hibernate 가 남기는 모든 로그가 debug모드로 설정
      # jpa hibernate가 생성하는 sql이 로거를 통해서 찍히도록 하는 설정
    org.hibernate.SQL: debug
    org.hibernate.type: trace # 실제 들어가는 파라미터값 찍어주는 설정
password:
  encryption_key: thelovemsg-secret-key
  algorithm: AES
  transformation: AES/ECB/PKCS5Padding
file:
  storage:
    location:  D://IntelliJ_IDEA//fileEntities